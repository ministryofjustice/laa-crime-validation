import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id "java"
	id "jacoco"
	id "org.sonarqube" version "4.0.0.2929"
	id "info.solidsoft.pitest" version "1.9.11"
	id "org.springframework.boot" version "3.1.5"
	id "org.jsonschema2dataclass" version "6.0.0"
}

group = "uk.gov.justice.laa.crime"

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

def versions = [
		pitest                  : "1.16.0",
		sentryVersion			: "7.1.0",
		springdocVersion        : "2.2.0",
		okhttpVersion           : "4.12.0",
		wiremockVersion    		: "2.35.0",
		crimeCommonsVersion		: "2.13.1",
		springCloudStubRunnerVersion       : "4.0.4"
]

configurations {
	configureEach {
		exclude group: 'junit', module: 'junit'
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation platform(SpringBootPlugin.BOM_COORDINATES)
    annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)

	implementation platform("io.sentry:sentry-bom:$versions.sentryVersion")
	implementation("io.sentry:sentry-spring-boot-starter-jakarta")
	implementation("io.sentry:sentry-logback")

	implementation "org.apache.commons:commons-lang3"
	implementation "io.micrometer:micrometer-registry-prometheus"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdocVersion"

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.liquibase:liquibase-core"

	implementation "uk.gov.justice.service.laa-crime:crime-commons-spring-boot-starter-rest-client:$versions.crimeCommonsVersion"
	implementation "uk.gov.justice.service.laa-crime:crime-commons-classes:$versions.crimeCommonsVersion"

	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	testImplementation "org.pitest:pitest:$versions.pitest"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "com.squareup.okhttp3:okhttp:$versions.okhttpVersion"
	testImplementation "com.github.tomakehurst:wiremock-jre8-standalone:$versions.wiremockVersion"
	testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner:$versions.springCloudStubRunnerVersion"

}

jacoco {
	toolVersion = "0.8.8"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/entity/**",
					"**/dto/**",
					"**/config/**"
			])
		}))
	}
}

pitest {
	targetClasses = [
			"uk.gov.justice.laa.crime.validation.*",
			"uk.gov.justice.laa.crime.validation.controller.*",
			"uk.gov.justice.laa.crime.validation.validation.*"
	]
	excludedClasses = [
			"uk.gov.justice.laa.crime.validation.dto.*",
			"uk.gov.justice.laa.crime.validation.mapper.*",
			"uk.gov.justice.laa.crime.validation.CrimeValidationApplication"
	]
	threads = 5
	outputFormats = ["XML", "HTML"]
	timestampedReports = false
	mutationThreshold = 60
}

tasks["sonar"].dependsOn test

sonar {
	properties {
		property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java"
		property "sonar.coverage.exclusions", "**/CrimeValidationApplication.java"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.projectKey", "ministryofjustice_laa-crime-validation"
		property "sonar.organization", "ministryofjustice"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectName", "Crime Apps :: crime-validation"
		property "sonar.pitest.mode", "reuseReport"
		property "sonar.pitest.reportsDirectory", "build/reports/pitest"
	}
}


jsonSchema2Pojo {
	executions {
		main {
			methods.builders = true
			methods.buildersDynamic = true
			methods.annotateJsr303Jakarta = true
			fields.floatUseBigDecimal = true
			dateTime.dateTimeType = "java.time.LocalDateTime"
			klass.targetPackage = "uk.gov.justice.laa.crime.validation.model"
			io.source.setFrom files("${project.rootDir}/src/main/resources/schemas")
		}
	}
}